(function(){var Cartograph,exports;Cartograph=function(){function Cartograph(fn){"function"==typeof fn&&this.draw(fn)}var extractParamNames,name_regexp,named_param_regexp,named_param_replace,parseQueryParams,routeToRegExp,splat_regexp,splat_replace;return named_param_regexp=/:([\w\d]+)/g,named_param_replace="([^/]+)",splat_regexp=/\*([\w\d]+)/g,splat_replace="(.*)",name_regexp=/[:|\*]([\w\d]+)/g,routeToRegExp=function(route){return route=route.replace(named_param_regexp,named_param_replace).replace(splat_regexp,splat_replace),RegExp("^"+route+"$","gi")},extractParamNames=function(route){var name,names,_results;for(_results=[];name=name_regexp.exec(route);)_results.push(names=name[1]);return _results},parseQueryParams=function(querystr){var match,params,re;if(params={},null!=querystr)for(re=/[\?&]([^=&]+)=?([^&$]+)?/g;match=re.exec(querystr);)params[match[1]]=match[2];return params},Cartograph.prototype.draw=function(fn){return fn.call(this)},Cartograph.prototype.map=function(route,fn){var _ref;if(null==(_ref=this.mappings)&&(this.mappings=[]),"string"!=typeof route)throw Error("route must be a string");if("function"!=typeof fn)throw Error("callback must be a function");return this.mappings.push({route:route,callback:fn})},Cartograph.prototype.match=function(msg,mixin){var key,mapping,match,params,val,_i,_len,_ref,_results;for(_ref=this.mappings,_results=[],_i=0,_len=_ref.length;_len>_i;_i++){if(mapping=_ref[_i],match=this.scan(msg,mapping.route)){if(null!=mixin){params=mixin.params,delete mixin.params;for(key in mixin)val=mixin[key],match[key]=val;if(null!=params&&null==match.params)match.params=params;else for(key in params)val=params[key],match.params[key]=val}mapping.callback(match);break}_results.push(void 0)}return _results},Cartograph.prototype.matchLocation=function(loc){var key,mixin,val;mixin={},loc.search&&(mixin.params=parseQueryParams(loc.search));for(key in loc)val=loc[key],mixin[key]=val;return this.match(loc.pathname,mixin)},Cartograph.prototype.scan=function(msg,route){var data,i,match,name,names,params,re,_i,_len;if(re=routeToRegExp(route),data=re.exec(msg),null==data)return!1;for(names=extractParamNames(route),params={},data.shift(),i=_i=0,_len=names.length;_len>_i;i=++_i)name=names[i],params[name]=data[i];return match={params:params}},Cartograph.prototype.namespace=function(ns,fn){var proxy,self;return self=this,proxy={map:function(route,cbk){return self.map(ns+route,cbk)}},fn.call(proxy)},Cartograph}(),exports!==void 0&&null!==exports?("undefined"!=typeof module&&null!==module&&null!=module.exports&&(exports=module.exports=Cartograph),exports.Cartograph=Cartograph):"function"==typeof define&&define.amd?define(function(){return Cartograph}):this.Cartograph=Cartograph}).call(this);